#pragma checksum "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a8b6503a9ee8dec4a7e95640f9d87afe4d8aaf3e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\_ViewImports.cshtml"
using InvoiceWebApp;

#line default
#line hidden
#line 3 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\_ViewImports.cshtml"
using InvoiceWebApp.Models.AccountViewModels;

#line default
#line hidden
#line 4 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\_ViewImports.cshtml"
using InvoiceWebApp.Models.ManageViewModels;

#line default
#line hidden
#line 5 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 1 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
using System.Diagnostics;

#line default
#line hidden
#line 2 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
using InvoiceWebApp.Data;

#line default
#line hidden
#line 3 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
using InvoiceWebApp.Models;

#line default
#line hidden
#line 4 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
using static InvoiceWebApp.Models.Debtor;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8b6503a9ee8dec4a7e95640f9d87afe4d8aaf3e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4685d22e54b1478206bdc34d535b7f798dcf83e0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/home.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(160, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 7 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

    User user = null;
    Admin admin = null;
    AppSettings settings = null;

    //Check for user
    if (SessionHelper.IsExists(Context.Session, "User")) {
        user = (User)Context.Session.Get<User>("User");
    }
    //Check for admin
    if (SessionHelper.IsExists(Context.Session, "Admin")) {
        admin = (Admin)Context.Session.Get<Admin>("Admin");
    }
    //Check for settings
    if (SessionHelper.IsExists(Context.Session, "Settings")) {
        Debug.WriteLine("Settings exists");
        settings = SessionHelper.Get<AppSettings>(Context.Session, "Settings");
    } else {
        settings = _context.Settings.FirstOrDefault();
        SessionHelper.Set(Context.Session, "Settings", settings);
    }

#line default
#line hidden
            BeginContext(926, 1, true);
            WriteLiteral("\n");
            EndContext();
            DefineSection("HEAD", async() => {
                BeginContext(941, 2, true);
                WriteLiteral("\n\t");
                EndContext();
                BeginContext(943, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a8b6503a9ee8dec4a7e95640f9d87afe4d8aaf3e6046", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(990, 907, true);
                WriteLiteral(@"
    <link href=""https://www.amcharts.com/lib/3/plugins/export/export.css"" rel=""stylesheet"" type=""text/css"">

    <!-- amCharts javascript code -->
    <script type=""text/javascript"" src=""http://www.amcharts.com/lib/3/amcharts.js""></script>
    <script type=""text/javascript"" src=""http://www.amcharts.com/lib/3/pie.js""></script>
    <script type=""text/javascript"" src=""http://cdn.amcharts.com/lib/3/gauge.js""></script>
    <script type=""text/javascript"" src=""http://www.amcharts.com/lib/3/serial.js""></script>
    <script type=""text/javascript"" src=""http://www.amcharts.com/lib/3/themes/light.js""></script>
    <script type=""text/javascript"" src=""http://www.amcharts.com/lib/3/themes/dark.js""></script>
    <script type=""text/javascript"" src=""http://www.amcharts.com/lib/3/themes/black.js""></script>
    <script src=""https://www.amcharts.com/lib/3/plugins/export/export.js"" type=""text/javascript""></script>
");
                EndContext();
            }
            );
            BeginContext(1899, 126, true);
            WriteLiteral("\n<div>\n    <div class=\"container\" id=\"home\">\n        <div class=\"row\">\n            <div class=\"col s12 col m12 center-align\">\n");
            EndContext();
#line 51 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                 if (user != null) {

#line default
#line hidden
            BeginContext(2062, 83, true);
            WriteLiteral("                    <h4 style=\"margin-top: 0px;text-transform:uppercase;\">Welcome, ");
            EndContext();
            BeginContext(2146, 21, false);
#line 52 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                                                              Write(user.Debtor.FirstName);

#line default
#line hidden
            EndContext();
            BeginContext(2167, 6, true);
            WriteLiteral("</h4>\n");
            EndContext();
#line 53 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                } else if (admin != null) {

#line default
#line hidden
            BeginContext(2217, 83, true);
            WriteLiteral("                    <h4 style=\"margin-top: 0px;text-transform:uppercase;\">Welcome, ");
            EndContext();
            BeginContext(2301, 15, false);
#line 54 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                                                              Write(admin.FirstName);

#line default
#line hidden
            EndContext();
            BeginContext(2316, 6, true);
            WriteLiteral("</h4>\n");
            EndContext();
#line 55 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                } else {

#line default
#line hidden
            BeginContext(2347, 87, true);
            WriteLiteral("                    <h4 style=\"margin-top: 0px;text-transform:uppercase;\">Welcome</h4>\n");
            EndContext();
#line 57 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                }

#line default
#line hidden
            BeginContext(2452, 306, true);
            WriteLiteral(@"            </div>
        </div>

        <div class=""row"">
            <div class=""col s12 col m12"">
                <p id=""invoiceText"" class=""center-align""></p>
            </div>
        </div>

        <div class=""divider"" style=""background-color: #b5b5b5;width: 80%;margin:0 auto;""></div>
		<br />

");
            EndContext();
#line 70 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
         if (user != null && admin == null) {

#line default
#line hidden
            BeginContext(2804, 343, true);
            WriteLiteral(@"            <div class=""row"">
                <div class=""col s3 col m3""></div>
                <div class=""col s12 col m12 center-align"">
                    <div id=""chartdiv"" style=""width:100%;height:400px;background:rgba(255, 255, 255, 0)""></div>
                </div>
                <div class=""col s3 col m3""></div>
            </div>
");
            EndContext();
#line 78 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(3157, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 80 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
         if (admin != null) {

#line default
#line hidden
            BeginContext(3188, 448, true);
            WriteLiteral(@"            <div class=""row"">
                <div class=""col s6 col m6 center-align"">
                    <div id=""admin_chartdiv"" style=""width:100%;height:250px;background:rgba(255, 255, 255, 0);""></div>
                </div>
                <div class=""col s6 col m6 center-align"">
                    <div id=""admin_chartdiv2"" style=""width:100%;height:250px;background:rgba(255, 255, 255, 0);""></div>
                </div>
            </div>
");
            EndContext();
#line 89 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(3646, 20, true);
            WriteLiteral("    </div>\n</div>\n\n\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3683, 1, true);
                WriteLiteral("\n");
                EndContext();
#line 95 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
                BeginContext(3751, 263, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            var user = null;
            var admin = null;
			var divHeight = $(""#home"").height();

			//Hide charts
			$(""#chartdiv"").hide();
			$(""#admin_chartdiv"").hide();
			$(""#admin_chartdiv2"").hide();

");
                EndContext();
#line 108 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (user != null) {
                

#line default
#line hidden
                BeginContext(4069, 48, true);
                WriteLiteral("\n\t\t\t\t\tadmin = null;\n                    user = \"");
                EndContext();
                BeginContext(4118, 10, false);
#line 111 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       Write(user.Email);

#line default
#line hidden
                EndContext();
                BeginContext(4128, 19, true);
                WriteLiteral("\";\n                ");
                EndContext();
#line 112 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(4169, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 114 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (admin != null) {
                

#line default
#line hidden
                BeginContext(4225, 33, true);
                WriteLiteral("\n\t\t\t\t\tuser = null;\n\t\t\t\t\tadmin = \"");
                EndContext();
                BeginContext(4259, 11, false);
#line 117 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                        Write(admin.Email);

#line default
#line hidden
                EndContext();
                BeginContext(4270, 19, true);
                WriteLiteral("\";\n                ");
                EndContext();
#line 118 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(4311, 480, true);
                WriteLiteral(@"
            if (user != null) {
                setClientHome();
            }
            if (admin != null) {
                setAdminHome();
            }
            if (user == null && admin == null) {
                var noUserText = `
                            With this application it is possible to view and pay your invoices

                            <br />

                            To use this website, you must login using the credentials sent to you by <b> ");
                EndContext();
                BeginContext(4792, 20, false);
#line 133 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                                                                                    Write(settings.CompanyName);

#line default
#line hidden
                EndContext();
                BeginContext(4812, 92, true);
                WriteLiteral(" <b>.\n\n                            <br /><br /><br />\n\n                            <a href=\"");
                EndContext();
                BeginContext(4905, 28, false);
#line 137 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                Write(Url.Action("Login", "Users"));

#line default
#line hidden
                EndContext();
                BeginContext(4933, 687, true);
                WriteLiteral(@"""
                                id=""home-button""
                                class=""btn-large indigo darken-1 waves-effect waves-light"">
                                    <i class=""fa fa-sign-in""></i>
                                    Sign In
                            </a>`;
                    $(""#invoiceText"").html(noUserText);
            }
        });

        //Setup text and charts when logged in client reaches home page
        function setClientHome() {
            var paidArray = """";
            var unpaidArray = """";

            //-----------------------------------------------------------------
            //Set text according to paid and unpaid invoices

");
                EndContext();
#line 155 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.clientNotPaidCount == 0){
                

#line default
#line hidden
                BeginContext(5693, 114, true);
                WriteLiteral("\n                    $(\"#invoiceText\").html(\"There are no unpaid invoices found at the moment.\");\n                ");
                EndContext();
#line 158 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(5829, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 160 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.clientNotPaidCount == 1) {
                

#line default
#line hidden
                BeginContext(5903, 136, true);
                WriteLiteral("\n                    $(\"#invoiceText\").html(\"You have 1 unpaid invoice.\"\n                        + \"<br />\"\n\t\t\t\t\t\t+ \"Total paid: &euro; ");
                EndContext();
                BeginContext(6041, 18, false);
#line 164 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                          Write(ViewBag.clientPaid);

#line default
#line hidden
                EndContext();
                BeginContext(6060, 84, true);
                WriteLiteral("\"\n                        + \"<br />\"\n                        + \"To be paid: &euro;  ");
                EndContext();
                BeginContext(6146, 21, false);
#line 166 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                           Write(ViewBag.clientNotPaid);

#line default
#line hidden
                EndContext();
                BeginContext(6168, 20, true);
                WriteLiteral("\");\n                ");
                EndContext();
#line 167 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(6210, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 169 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.clientNotPaidCount > 1) {
                

#line default
#line hidden
                BeginContext(6283, 54, true);
                WriteLiteral("\n                    $(\"#invoiceText\").html(\"You have ");
                EndContext();
                BeginContext(6339, 26, false);
#line 171 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                                 Write(ViewBag.clientNotPaidCount);

#line default
#line hidden
                EndContext();
                BeginContext(6366, 100, true);
                WriteLiteral(" unpaid invoices.\"\n                        + \"<br />\"\n                        + \"Total paid: &euro; ");
                EndContext();
                BeginContext(6468, 18, false);
#line 173 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                          Write(ViewBag.clientPaid);

#line default
#line hidden
                EndContext();
                BeginContext(6487, 84, true);
                WriteLiteral("\"\n                        + \"<br />\"\n                        + \"To be paid: &euro;  ");
                EndContext();
                BeginContext(6573, 21, false);
#line 175 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                           Write(ViewBag.clientNotPaid);

#line default
#line hidden
                EndContext();
                BeginContext(6595, 20, true);
                WriteLiteral("\");\n                ");
                EndContext();
#line 176 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(6637, 160, true);
                WriteLiteral("            //-----------------------------------------------------------------\n            //Show chart based on invoices\n\n            $(\"#chartdiv\").show();\n\n");
                EndContext();
#line 183 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
              
                int? paid = ViewBag.clientPaidCount;
                int? unpaid = ViewBag.clientNotPaidCount;

                if (paid != null)
                {
                    

#line default
#line hidden
                BeginContext(7002, 37, true);
                WriteLiteral("\n                        paidArray = ");
                EndContext();
                BeginContext(7040, 4, false);
#line 190 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               Write(paid);

#line default
#line hidden
                EndContext();
                BeginContext(7044, 22, true);
                WriteLiteral(";\n                    ");
                EndContext();
#line 191 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                           
                }
                if (unpaid != null)
                {
                    

#line default
#line hidden
                BeginContext(7172, 39, true);
                WriteLiteral("\n                        unpaidArray = ");
                EndContext();
                BeginContext(7212, 6, false);
#line 196 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                 Write(unpaid);

#line default
#line hidden
                EndContext();
                BeginContext(7218, 22, true);
                WriteLiteral(";\n                    ");
                EndContext();
#line 197 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                           
                }
            

#line default
#line hidden
                BeginContext(7280, 2490, true);
                WriteLiteral(@"
            //-----------------------------------------------------------------
            //Chart one of one
            if (paidArray >= 0 && unpaidArray >= 0) {
                AmCharts.makeChart(""chartdiv"",
                    {
                        ""type"": ""pie"",
                        ""balloonText"": ""[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>"",
                        ""innerRadius"": 0,
                        ""labelRadius"": 21,
                        ""startDuration"": 2,
                        ""radius"": 100,
                        ""baseColor"": ""#0063D3"",
                        ""hoverAlpha"": 0.62,
                        ""outlineThickness"": 0,
                        ""titleField"": ""category"",
                        ""valueField"": ""column-1"",
                        ""decimalSeparator"": "","",
                        ""percentPrecision"": 1,
                        ""theme"": ""light"",
                        ""thousandsSeparator"": ""."",
                        ""allLa");
                WriteLiteral(@"bels"": [],
                        ""creditsPosition"": ""bottom-right"",
                        ""showEntries"": true,
                        ""balloon"": {},
                        ""legend"": {
                            ""enabled"": true,
                            ""align"": ""center"",
                            ""markerType"": ""circle""
                        },
                        ""titles"": [],
                        ""dataProvider"": [
                            {
                                ""category"": ""Paid"",
                                ""column-1"": paidArray
                            },
                            {
                                ""category"": ""Unpaid"",
                                ""column-1"": unpaidArray
                            }
                        ]
                    });

                $(""#home"").css(""margin-bottom"", ""40px"");
            }
        }

        //Setup text and charts when logged in admin reaches home page
        function setAdminHome() {
			var in");
                WriteLiteral(@"voiceText = """";
			var finalText = """";
			var conceptText = """";

			var totalInvoices = 0;
			var conceptInvoices = 0;

            var paidCount = """";
			var unpaidCount = """";

            var total = """";
            var totalPaid = """";
			var totalAmountFormatted = """";

			var showCharts = false;

            //-----------------------------------------------------------------
            //Set text according to paid and unpaid invoices
");
                EndContext();
#line 268 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.finalCount == 0){
                

#line default
#line hidden
                BeginContext(9861, 96, true);
                WriteLiteral("\n\t\t\t\t\tfinalText += \"There are currently no invoices.\";\n\t\t\t\t\tshowCharts = false;\n                ");
                EndContext();
#line 272 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(9979, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 274 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.finalCount == 1) {
                

#line default
#line hidden
                BeginContext(10045, 92, true);
                WriteLiteral("\n\t\t\t\t\tfinalText += \"There is currently 1 invoice.\";\n\t\t\t\t\tshowCharts = true;\n                ");
                EndContext();
#line 278 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(10159, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 280 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.finalCount > 1) {
                

#line default
#line hidden
                BeginContext(10224, 40, true);
                WriteLiteral("\n\t\t\t\t\tfinalText += \"There are currently ");
                EndContext();
                BeginContext(10266, 18, false);
#line 282 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                                  Write(ViewBag.finalCount);

#line default
#line hidden
                EndContext();
                BeginContext(10285, 53, true);
                WriteLiteral(" invoices.\";\n\t\t\t\t\tshowCharts = true;\n                ");
                EndContext();
#line 284 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

			

#line default
#line hidden
                BeginContext(10389, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 288 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.conceptCount == 0){
                

#line default
#line hidden
                BeginContext(10456, 89, true);
                WriteLiteral("\n\t\t\t\t\tconceptText += \"<br /> There are no invoices saved as \'concept\'.\";\n                ");
                EndContext();
#line 291 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(10567, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 293 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.conceptCount == 1) {
                

#line default
#line hidden
                BeginContext(10635, 86, true);
                WriteLiteral("\n\t\t\t\t\tconceptText += \"<br /> There is 1 invoice saved as \'concept\'.\";\n                ");
                EndContext();
#line 296 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(10743, 12, true);
                WriteLiteral("            ");
                EndContext();
#line 298 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
             if (ViewBag.conceptCount > 1) {
                

#line default
#line hidden
                BeginContext(10810, 39, true);
                WriteLiteral("\n\t\t\t\t\tconceptText += \"<br /> There are ");
                EndContext();
                BeginContext(10851, 20, false);
#line 300 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                                 Write(ViewBag.conceptCount);

#line default
#line hidden
                EndContext();
                BeginContext(10872, 48, true);
                WriteLiteral(" invoices saved as \'concept\'.\";\n                ");
                EndContext();
#line 301 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                       
            }

#line default
#line hidden
                BeginContext(10942, 333, true);
                WriteLiteral(@"
			invoiceText = finalText + conceptText;
			$(""#invoiceText"").html(invoiceText);

            //-----------------------------------------------------------------
            //Show chart based on invoices

			if (showCharts == true && $(window).width() >= 400) {
				$(""#admin_chartdiv"").show();
				$(""#admin_chartdiv2"").show();

");
                EndContext();
#line 314 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                  
					int? paidInvoiceCount = ViewBag.adminPaidCount;
					int? unpaidInvoiceCount = ViewBag.adminNotPaidCount;

					int? totalInvoiceCount = ViewBag.finalCount;
					int? conceptInvoiceCount = ViewBag.conceptCount;

					decimal? totalPaid = ViewBag.totalPaid;
					decimal? totalAmount = ViewBag.total;

					if (paidInvoiceCount != null){
						

#line default
#line hidden
                BeginContext(11636, 20, true);
                WriteLiteral("\n\t\t\t\t\t\t\tpaidCount = ");
                EndContext();
                BeginContext(11657, 16, false);
#line 326 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                   Write(paidInvoiceCount);

#line default
#line hidden
                EndContext();
                BeginContext(11673, 8, true);
                WriteLiteral(";\n\t\t\t\t\t\t");
                EndContext();
#line 327 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               
					}
					if (unpaidInvoiceCount != null){
						

#line default
#line hidden
                BeginContext(11746, 22, true);
                WriteLiteral("\n\t\t\t\t\t\t\tunpaidCount = ");
                EndContext();
                BeginContext(11769, 18, false);
#line 331 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                     Write(unpaidInvoiceCount);

#line default
#line hidden
                EndContext();
                BeginContext(11787, 8, true);
                WriteLiteral(";\n\t\t\t\t\t\t");
                EndContext();
#line 332 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               
					}
					if (totalPaid != null){
						

#line default
#line hidden
                BeginContext(11851, 20, true);
                WriteLiteral("\n\t\t\t\t\t\t\ttotalPaid = ");
                EndContext();
                BeginContext(11872, 9, false);
#line 336 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                   Write(totalPaid);

#line default
#line hidden
                EndContext();
                BeginContext(11881, 8, true);
                WriteLiteral(";\n\t\t\t\t\t\t");
                EndContext();
#line 337 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               
					}
					if (totalAmount != null){
						

#line default
#line hidden
                BeginContext(11947, 16, true);
                WriteLiteral("\n\t\t\t\t\t\t\ttotal = ");
                EndContext();
                BeginContext(11964, 11, false);
#line 341 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               Write(totalAmount);

#line default
#line hidden
                EndContext();
                BeginContext(11975, 8, true);
                WriteLiteral(";\n\t\t\t\t\t\t");
                EndContext();
#line 342 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               
					}
					if (totalInvoiceCount != null){
						

#line default
#line hidden
                BeginContext(12047, 24, true);
                WriteLiteral("\n\t\t\t\t\t\t\ttotalInvoices = ");
                EndContext();
                BeginContext(12072, 17, false);
#line 346 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                       Write(totalInvoiceCount);

#line default
#line hidden
                EndContext();
                BeginContext(12089, 8, true);
                WriteLiteral(";\n\t\t\t\t\t\t");
                EndContext();
#line 347 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               
					}
					if (conceptInvoiceCount != null){
						

#line default
#line hidden
                BeginContext(12163, 26, true);
                WriteLiteral("\n\t\t\t\t\t\t\tconceptInvoices = ");
                EndContext();
                BeginContext(12190, 19, false);
#line 351 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                                         Write(conceptInvoiceCount);

#line default
#line hidden
                EndContext();
                BeginContext(12209, 8, true);
                WriteLiteral(";\n\t\t\t\t\t\t");
                EndContext();
#line 352 "D:\PROJECT 2019\INVOICE\MVC-Invoice2-master\InvoiceWebApp\Views\Home\Index.cshtml"
                               
					}
				

#line default
#line hidden
                BeginContext(12238, 11038, true);
                WriteLiteral(@"
				//Format to two decimal number
				if (total > 0) {
					totalAmountFormatted = AmCharts.formatNumber(total, {
						precision: -1,
						decimalSeparator: "","",
						thousandsSeparator: "".""
					}, 2);
				}

				//-----------------------------------------------------------------
				//Chart one of two
				if (conceptInvoices > 0 && total > 0) {
					if ($(""#admin_chartdiv"").empty()) {
						AmCharts.makeChart(""admin_chartdiv"",
							{
								""type"": ""serial"",
								""categoryField"": ""category"",
								""rotate"": true,
								""depth3D"": 8,
								""angle"": 40,
								""colors"": [
									""#eaa40b"", //orange
								],
								""startEffect"": ""easeInSine"",
								""startDuration"": 2,
								""autoDisplay"": true,
								""plotAreaBorderAlpha"": 0,
								""plotAreaBorderColor"": ""#FFF9F9"",
								""plotAreaFillAlphas"": 0,
								""fontSize"": 12,
								""theme"": ""light"",
								""categoryAxis"": {
									""autoWrap"": true,
									""gridPosition"": ""start"",
									""gridAlpha"": 0,
									""titleFontSiz");
                WriteLiteral(@"e"": 0,
									""labelsEnabled"": false,
									""gridCount"": 0,
									""gridThickness"": 0,
									""tickLength"": 0,
									""axisColor"": ""#A4A4A4""
								},
								""trendLines"": [],
								""graphs"": [
									{
										""balloonText"": ""Invoices saved as concept: [[value]]"",
										""bulletAlpha"": 0,
										""color"": ""#000"",
										""columnWidth"": 1.0,
										""cornerRadiusTop"": 3,
										""fillAlphas"": 1,
										""gapPeriod"": 1,
										""id"": ""AmGraph-1"",
										""labelPosition"": ""bottom"",
										""lineAlpha"": 0,
										""negativeFillAlphas"": 0,
										""labelAnchor"": ""middle"",
										""labelPosition"": ""right"",
										""labelOffset"": 20,
										""labelRotation"": 90,
										""labelText"": ""Concepts"",
										""title"": ""graph 1"",
										""type"": ""column"",
										""valueField"": ""graph 1""
									}
								],
								""guides"": [
									{
										""above"": true,
										""angle"": 0,
										""balloonText"": ""Total invoices: "" + totalInvoices,
										""boldLabel"": ");
                WriteLiteral(@"true,
										""dashLength"": 0,
										""expand"": true,
										""fillColor"": ""#FFFF00"",
										""id"": ""Guide-1"",
										""inside"": true,
										""label"": ""Total invoices"",
										""labelRotation"": 90,
										""lineAlpha"": 1,
										""lineColor"": ""#FFC800"",
										""lineThickness"": 2,
										""position"": ""bottom"",
										""tickLength"": 3,
										""toAngle"": 0,
										""value"": totalInvoices,
										""valueAxis"": ""ValueAxis-1""
									}
								],
								""valueAxes"": [
									{
										""id"": ""ValueAxis-1"",
										""includeAllValues"": true,
										""includeGuidesInMinMax"": true,
										""zeroGridAlpha"": 0,
										""integersOnly"": true,
										""axisAlpha"": 0,
										""gridAlpha"": 0,
										""minorGridAlpha"": 0,
										""offset"": 2,
										""title"": """",
										""titleFontSize"": 11,
										""gridCount"": 0,
										""gridThickness"": 0,
										""labelsEnabled"": false,
										""axisThickness"": 0,
									}
								],
								""allLabels"": [],
								""ball");
                WriteLiteral(@"oon"": {
									""maxWidth"": 201,
									""offsetX"": -3
								},
								""titles"": [
									{
										""id"": ""Title-1"",
										""size"": 12,
										""text"": ""Invoices saved as concept""
									}
								],
								""dataProvider"": [
									{
										""category"": """",
										""graph 1"": conceptInvoices
									}
								]
							});
					} else if ($(""#admin_chartdiv2"").empty()){ 
						AmCharts.makeChart(""admin_chartdiv2"",
							{
								""type"": ""serial"",
								""categoryField"": ""category"",
								""rotate"": true,
								""depth3D"": 8,
								""angle"": 40,
								""colors"": [
									""#eaa40b"", //orange
								],
								""startEffect"": ""easeInSine"",
								""startDuration"": 2,
								""autoDisplay"": true,
								""plotAreaBorderAlpha"": 0,
								""plotAreaBorderColor"": ""#FFF9F9"",
								""plotAreaFillAlphas"": 0,
								""fontSize"": 12,
								""theme"": ""light"",
								""categoryAxis"": {
									""autoWrap"": true,
									""gridPosition"": ""start"",
									""gridAlpha"": 0,
									""titleFont");
                WriteLiteral(@"Size"": 0,
									""labelsEnabled"": false,
									""gridCount"": 0,
									""gridThickness"": 0,
									""tickLength"": 0,
									""axisColor"": ""#A4A4A4""
								},
								""trendLines"": [],
								""graphs"": [
									{
										""balloonText"": ""Invoices saved as concept: [[value]]"",
										""bulletAlpha"": 0,
										""color"": ""#000"",
										""columnWidth"": 1.0,
										""cornerRadiusTop"": 3,
										""fillAlphas"": 1,
										""gapPeriod"": 1,
										""id"": ""AmGraph-1"",
										""labelPosition"": ""bottom"",
										""lineAlpha"": 0,
										""negativeFillAlphas"": 0,
										""labelAnchor"": ""middle"",
										""labelPosition"": ""right"",
										""labelOffset"": 20,
										""labelRotation"": 90,
										""labelText"": ""Concepts"",
										""title"": ""graph 1"",
										""type"": ""column"",
										""valueField"": ""graph 1""
									}
								],
								""guides"": [
									{
										""above"": true,
										""angle"": 0,
										""balloonText"": ""Total invoices: "" + totalInvoices,
										""boldLabel");
                WriteLiteral(@""": true,
										""dashLength"": 0,
										""expand"": true,
										""fillColor"": ""#FFFF00"",
										""id"": ""Guide-1"",
										""inside"": true,
										""label"": ""Total invoices"",
										""labelRotation"": 90,
										""lineAlpha"": 1,
										""lineColor"": ""#FFC800"",
										""lineThickness"": 2,
										""position"": ""bottom"",
										""tickLength"": 3,
										""toAngle"": 0,
										""value"": totalInvoices,
										""valueAxis"": ""ValueAxis-1""
									}
								],
								""valueAxes"": [
									{
										""id"": ""ValueAxis-1"",
										""includeAllValues"": true,
										""includeGuidesInMinMax"": true,
										""zeroGridAlpha"": 0,
										""integersOnly"": true,
										""axisAlpha"": 0,
										""gridAlpha"": 0,
										""minorGridAlpha"": 0,
										""offset"": 2,
										""title"": """",
										""titleFontSize"": 11,
										""gridCount"": 0,
										""gridThickness"": 0,
										""labelsEnabled"": false,
										""axisThickness"": 0,
									}
								],
								""allLabels"": [],
								""b");
                WriteLiteral(@"alloon"": {
									""maxWidth"": 201,
									""offsetX"": -3
								},
								""titles"": [
									{
										""id"": ""Title-1"",
										""size"": 12,
										""text"": ""Invoices saved as concept""
									}
								],
								""dataProvider"": [
									{
										""category"": """",
										""graph 1"": conceptInvoices
									}
								]
							});
					}
				}

				//-----------------------------------------------------------------
				//Chart two of two
				if (paidCount >= 0 && unpaidCount > 0) {
					if ($(""#admin_chartdiv2"").empty()) {
						AmCharts.makeChart(""admin_chartdiv2"",
							{
								""type"": ""serial"",
								""categoryField"": ""category"",
								""colors"": [
									""#00a1ff"", //blue
									""#8a11f4"", //purple
								],
								""columnSpacing"": 15,
								""columnWidth"": 0.5,
								""depth3D"": 8,
								""angle"": 40,
								""startDuration"": 4,
								""startEffect"": ""bounce"",
								""autoDisplay"": true,
								""plotAreaBorderAlpha"": 0,
								""plotAreaBorderColor"": ""#FFF9F9"",
								");
                WriteLiteral(@"""plotAreaFillAlphas"": 0,
								""theme"": ""light"",
								""categoryAxis"": {
									""gridPosition"": ""start"",
									""title"": """",
									""titleFontSize"": 11,
									""labelsEnabled"": false,
									""gridCount"": 0,
									""gridThickness"": 0,
									""tickLength"": 0,
									""axisColor"": ""#A4A4A4""
								},
								""trendLines"": [],
								""graphs"": [
									{
										""balloonText"": ""Invoices collected[[category]]: [[value]]"",
										""fillAlphas"": 1,
										""id"": ""AmGraph-1"",
										""labelText"": ""Collected"",
										""labelOffset"": 12,
										""title"": ""Collected"",
										""type"": ""column"",
										""valueField"": ""Collected""
									},
									{
										""balloonText"": ""Invoices due[[category]]: [[value]]"",
										""fillAlphas"": 1,
										""id"": ""AmGraph-2"",
										""labelText"": ""Due"",
										""labelOffset"": 12,
										""title"": ""Due"",
										""type"": ""column"",
										""valueField"": ""Due""
									}
								],
								""guides"": [],
								""valueAxes"": [
								");
                WriteLiteral(@"	{
										""id"": ""ValueAxis-1"",
										""title"": """",
										""integersOnly"": true,
										""gridCount"": 0,
										""gridThickness"": 0,
										""labelsEnabled"": false,
										""axisThickness"": 0
									}
								],
								""allLabels"": [],
								""balloon"": {
									""borderThickness"": 0
								},
								""titles"": [
									{
										""id"": ""Title-1"",
										""size"": 12,
										""text"": ""Invoices collected""
									}
								],
								""dataProvider"": [
									{
										""category"": """",
										""Due"": unpaidCount,
										""Collected"": paidCount
									}
								]
							}
						);
					} else if ($(""#admin_chartdiv"").empty()){ 
						AmCharts.makeChart(""admin_chartdiv"",
							{
								""type"": ""serial"",
								""categoryField"": ""category"",
								""colors"": [
									""#00a1ff"", //blue
									""#8a11f4"", //purple
								],
								""columnSpacing"": 15,
								""columnWidth"": 0.5,
								""depth3D"": 8,
								""angle"": 40,
								""startDuration"": 4,
								""startEffect"": ");
                WriteLiteral(@"""bounce"",
								""autoDisplay"": true,
								""plotAreaBorderAlpha"": 0,
								""plotAreaBorderColor"": ""#FFF9F9"",
								""plotAreaFillAlphas"": 0,
								""theme"": ""light"",
								""categoryAxis"": {
									""gridPosition"": ""start"",
									""title"": """",
									""titleFontSize"": 11,
									""labelsEnabled"": false,
									""gridCount"": 0,
									""gridThickness"": 0,
									""tickLength"": 0,
									""axisColor"": ""#A4A4A4""
								},
								""trendLines"": [],
								""graphs"": [
									{
										""balloonText"": ""Invoices collected[[category]]: [[value]]"",
										""fillAlphas"": 1,
										""id"": ""AmGraph-1"",
										""labelText"": ""Collected"",
										""labelOffset"": 12,
										""title"": ""Collected"",
										""type"": ""column"",
										""valueField"": ""Collected""
									},
									{
										""balloonText"": ""Invoices due[[category]]: [[value]]"",
										""fillAlphas"": 1,
										""id"": ""AmGraph-2"",
										""labelText"": ""Due"",
										""labelOffset"": 12,
										""title"": ""Due"",
										");
                WriteLiteral(@"""type"": ""column"",
										""valueField"": ""Due""
									}
								],
								""guides"": [],
								""valueAxes"": [
									{
										""id"": ""ValueAxis-1"",
										""title"": """",
										""integersOnly"": true,
										""gridCount"": 0,
										""gridThickness"": 0,
										""labelsEnabled"": false,
										""axisThickness"": 0
									}
								],
								""allLabels"": [],
								""balloon"": {
									""borderThickness"": 0
								},
								""titles"": [
									{
										""id"": ""Title-1"",
										""size"": 12,
										""text"": ""Invoices collected""
									}
								],
								""dataProvider"": [
									{
										""category"": """",
										""Due"": unpaidCount,
										""Collected"": paidCount
									}
								]
							}
						);
					}
				}

            }
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ApplicationDbContext _context { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
